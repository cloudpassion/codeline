"""
https://t.me/pythonist_ru/28
Проект Эйлера. Задача 2 "Четные числа Фибоначчи":

Условие: Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих. Начиная с 1 и 2, первые 10 элементов будут:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, …

Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.
"""

# решение через рекурсию, граница below и счетчик below_inc избыточны(исключительно для проверки правильности формулы),
# граница under пока сумма предидущих не будет 400000 отправльть обратно в функцию
# список и текущий индекс элемента с списке + 1
# если больше 400000 возвращаем список

def f_find(count, flist, below = 10, below_inc = 0, under = 4000000):

    below_inc += 1
    fsum = flist[count-1] + flist[count-2]
    if fsum > under:
        return flist

    flist.append( flist[count-1]+flist[count-2])
    return f_find(count+1, flist, below, below_inc) if below_inc != below else flist

p = f_find(2, [ 1, 2 ], 10000)

# выводим сумму четных
print(p)
result = 0
for i in p:
    if i % 2 == 0: result += i

print(result)
